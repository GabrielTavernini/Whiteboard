{"version":3,"sources":["api.js","note.js","modal.js","App.js","serviceWorker.js","index.js"],"names":["socket","io","Note","opacityStyle","opacity","this","props","left","top","react_default","a","createElement","className","style","note","author","Component","Modal","_this","showHideClassName","show","id","placeholder","value","onFocus","handleFocus","onChange","e","handleChange","type","role","aria-label","onClick","handleEmoji","bind","handleClose","handleWrite","App","state","modalFocus","notes","x","y","emit","hideModal","valueName","setState","event","Object","defineProperty","target","i","em","console","log","showModal","handleClick","pageX","pageY","cb","reset","_this2","err","concat","notesArr","on","list","length","push","modal","getList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0cdbc0ec.chunk.js","sourcesContent":["import io from 'socket.io-client';\nconst  socket = io('https://worldwhiteboard.herokuapp.com')//http://localhost:8000\n\nfunction subscribeToTimer(cb, reset) {\n  //socket.on('timer', timestamp => cb(null, timestamp));\n  //socket.emit('subscribeToTimer', 10000);\n  socket.on('newNote', (note) => cb(null, note));\n  socket.on('resetNotes', (notesArr) => reset(notesArr));\n  //socket.emit('newNote', 'Fucking long note jks jfkafkafhjj sasads ssss  sss sss ss s hjhj', 'Author', '100', '20', '0.7');\n}\n\nfunction sendNote(note, author, x, y){\n\tsocket.emit('newNote', note, author, x, y, '1');\n}\n\nfunction getNotes(){\n\tsocket.emit('getNotes');\n}\n\nexport { subscribeToTimer, sendNote, getNotes };","import React, { Component } from 'react';\nimport './App.css';\n\nclass Note extends Component {\n\trender() {\n\t\tconst opacityStyle = {\n\t\t\topacity: this.props.opacity,\n\t\t\tleft: this.props.left + 'px',\n\t\t\ttop: this.props.top + 'px'\n\t\t};\n\n\t\treturn (\n\t\t<div className=\"noteBubble\" style={opacityStyle}>\n\t\t\t<div className=\"noteNote\">{this.props.note}</div>\n\t\t\t<div className=\"noteAuthor\">-{this.props.author}</div>\n\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Note;","import React, { Component } from 'react';\nimport './App.css';\n\nclass Modal extends Component {\n\trender() {\n\t\tconst showHideClassName = this.props.show ? \"modal display-block\" : \"modal display-none\";\n\n\t\treturn (\n\t\t\t<div className={showHideClassName}>\n\t\t\t\t<header className=\"modalMain\">\n\t\t\t\t\t<textarea \n\t\t\t\t\tid=\"NoteInput\" \n\t\t\t\t\tplaceholder=\"Your Note\" \n\t\t\t\t\tclassName=\"noteArea\" \n\t\t\t\t\tvalue={this.props.note} \n\t\t\t\t\tonFocus={() => this.props.handleFocus('note')} \n\t\t\t\t\tonChange={e => this.props.handleChange(e, 'note')}/>\n\t\t\t\t\t\n\t\t\t\t\t<input \n\t\t\t\t\t\tid=\"AuthorInput\" \n\t\t\t\t\t\tplaceholder=\"Your Nickname\" \n\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\tclassName=\"authorInput\" \n\t\t\t\t\t\tvalue={this.props.author} \n\t\t\t\t\t\tonFocus={() => this.props.handleFocus('author')} \n\t\t\t\t\t\tonChange={e => this.props.handleChange(e, 'author')}/>\n\n\t\t\t\t\t<div className=\"emojiDiv\">\n\t\t\t\t\t\t<span role=\"img\" aria-label=\"Laugh\" onClick={this.props.handleEmoji.bind(null, 0)} className=\"modalButton\">😂</span>\n\t\t\t\t\t\t<span role=\"img\" aria-label=\"SunGlasses\" onClick={this.props.handleEmoji.bind(null, 1)} className=\"modalButton\">😎</span>\n\t\t\t\t\t\t<span role=\"img\" aria-label=\"Heart Eyes\" onClick={this.props.handleEmoji.bind(null, 2)} className=\"modalButton\">😍</span>\n\t\t\t\t\t\t<span role=\"img\" aria-label=\"Thumb Up\" onClick={this.props.handleEmoji.bind(null, 3)} className=\"modalButton\">👍🏻</span>\n\t\t\t\t\t\t<span role=\"img\" aria-label=\"Read Heart\" onClick={this.props.handleEmoji.bind(null, 4)} className=\"modalButton\">❤️</span>\n\t\t\t\t\t\t<span role=\"img\" aria-label=\"Green Apple\" onClick={this.props.handleEmoji.bind(null, 5)} className=\"modalButton\">🍏</span>\n\t\t\t\t\t\t<span role=\"img\" aria-label=\"Rocket\" onClick={this.props.handleEmoji.bind(null, 6)} className=\"modalButton\">🚀</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button onClick={this.props.handleClose} className=\"modalButton btn red\">Cancel</button>\n\t\t\t\t\t\t<button onClick={this.props.handleWrite} className=\"modalButton btn green\">Write It</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Modal;","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport { subscribeToTimer, sendNote, getNotes } from './api.js';\nimport Note from './note.js'\nimport Modal from './modal.js'\n\nclass App extends Component {\n\tstate = {\n\t\t//timestamp: 'no timestamp yet',\n\t\t//titles: [],\n\t\tnote: '',\n\t\tauthor: '',\n\t\tmodalFocus: '',\n\t\tnotes: [],\n\t\t// authors: [],\n\t\t// lefts: [],\n\t\t// tops: [],\n\t\t// opacity: [],\n\t\tshow: false\n\t};\n\n\tcomponentDidMount() {\n\t\tsubscribeToTimer((err, note) => this.setState({ \n\t\t\t//titles: this.state.titles.concat(title),\n\t\t\tnotes: this.state.notes.concat(note)\n\t\t\t// authors: this.state.authors.concat(author),\n\t\t\t// lefts: this.state.lefts.concat(left),\n\t\t\t// tops: this.state.tops.concat(top),\n\t\t\t// opacity: this.state.opacity.concat(opacity),\n\t\t\t// show: false\n\t\t}), (notesArr) => this.setState({\n\t\t\tnotes: notesArr\n\t\t}));\n\n\t\tgetNotes((notesArr) => this.setState({\n\t\t\tnotes: notesArr\n\t\t}));\n\t}\n\n\tgetList() {\n\t\tlet list = [];\n\t\tfor (let i=0; i < this.state.notes.length; i++) {\n\t\t\tlist.push(<Note \n\t\t\t\tnote={this.state.notes[i].note} \n\t\t\t\tauthor={this.state.notes[i].author} \n\t\t\t\tleft={this.state.notes[i].left}\n\t\t\t\ttop={this.state.notes[i].top}\n\t\t\t\topacity={this.state.notes[i].opacity}/>)\n\t\t\t\t//console.log(this.state.lefts[i] + \" : \" + this.state.tops[i] + \" : \" + this.state.opacity[i]);\n\t\t} \n\t\treturn list;\n\t}\n\n\thandleWrite = () => {\n\t\tif(this.state.note && this.state.author){\n\t\t\tsendNote(this.state.note, this.state.author, this.state.x, this.state.y);\n\t\t\tthis.hideModal();\n\t\t}\n\t}\n\n\thandleFocus = (valueName) => {\n\t\tthis.setState({\n\t\t\tmodalFocus: valueName\n\t\t});\n\t}\n\n\thandleChange = (event, valueName) => {\n\t\tthis.setState({\n\t\t\t[valueName]: event.target.value\n\t\t});\n\t}\n\n\thandleEmoji = (i) => {\n\t\tlet em;\n\t\tconsole.log(i);\n\t\tswitch(i){\n\t\t\tcase 0:\n\t\t\t\tem = '😂';\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tem = '😎';\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tem = '😍';\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tem = '👍🏻';\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tem = '❤️';\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tem = '🍏';\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tem = '🚀';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif(this.state.modalFocus === 'note')\n\t\t\tthis.setState({\n\t\t\t\tnote: this.state.note + em\n\t\t\t});\n\t\telse\n\t\t\tthis.setState({\n\t\t\t\tauthor: this.state.author + em\n\t\t\t});\n\t}\n\n\tshowModal = (x, y) => {\n\t\tthis.setState({ \n\t\t\tshow: true, \n\t\t\tx: x,\n\t\t\ty: y\n\t\t});\n\t};\n\t\n\thideModal = () => {\n\t\tthis.setState({ show: false });\n\t\tthis.setState({\n\t\t\tnote: '',\n\t\t\tauthor: ''\n\t\t});\n\t};\n\n\thandleClick = (e) => {\n\t\tthis.showModal(e.pageX, e.pageY)\n\t}\n\n  render() {\n    return (\n\t\t<div>\n\t\t\t<Modal \n\t\t\t\tshow={this.state.show} \n\t\t\t\thandleClose={this.hideModal} \n\t\t\t\thandleWrite={this.handleWrite} \n\t\t\t\thandleChange={this.handleChange} \n\t\t\t\tnote={this.state.note} \n\t\t\t\tauthor={this.state.author} \n\t\t\t\thandleEmoji={this.handleEmoji}\n\t\t\t\thandleFocus={this.handleFocus}/>\n\n\t\t\t<div className=\"App\" onClick={this.handleClick}>\n\t\t\t\t<p className=\"PageTitle\">The World's WhiteBoard</p>\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t{this.getList()}\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t</div>\n\n\t\t\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}