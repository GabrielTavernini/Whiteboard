{"version":3,"sources":["api.js","note.js","modal.js","App.js","serviceWorker.js","index.js"],"names":["socket","io","sendNote","note","author","x","y","emit","Note","opacityStyle","opacity","this","props","left","top","react_default","a","createElement","className","style","Component","Modal","state","modalFocus","handleWrite","_this","handleClose","handleFocus","valueName","setState","handleChange","event","Object","defineProperty","target","value","handleEmoji","i","em","console","log","_this2","showHideClassName","show","id","placeholder","onFocus","onChange","e","type","role","aria-label","onClick","bind","App","notes","showModal","hideModal","handleClick","pageX","window","innerWidth","pageY","innerHeight","cb","reset","err","concat","notesArr","on","list","length","push","key","modal","getList","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oQACOA,QAASC,GAAG,yCAUnB,SAASC,EAASC,EAAMC,EAAQC,EAAGC,GAClCN,EAAOO,KAAK,UAAWJ,EAAMC,EAAQC,EAAGC,EAAG,SCQ7BE,mLAfb,IAAMC,EAAe,CACpBC,QAASC,KAAKC,MAAMF,QACpBG,KAAMF,KAAKC,MAAMC,KAAO,IACxBC,IAAKH,KAAKC,MAAME,IAAM,KAGvB,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaC,MAAOV,GAClCM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYP,KAAKC,MAAMT,MACtCY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,IAA8BP,KAAKC,MAAMR,gBAXzBgB,qBCuHJC,6MArHdC,MAAQ,CACPnB,KAAM,GACNC,OAAQ,GACRmB,WAAY,MAGbC,YAAc,WACVC,EAAKH,MAAMnB,OACVsB,EAAKH,MAAMlB,OACbF,EAASuB,EAAKH,MAAMnB,KAAMsB,EAAKH,MAAMlB,OAAQqB,EAAKb,MAAMP,EAAGoB,EAAKb,MAAMN,GAEtEJ,EAASuB,EAAKH,MAAMnB,KAAM,UAAWsB,EAAKb,MAAMP,EAAGoB,EAAKb,MAAMN,GAE/DmB,EAAKC,kBAIPC,YAAc,SAACC,GACdH,EAAKI,SAAS,CACbN,WAAYK,OAIdE,aAAe,SAACC,EAAOH,GACtBH,EAAKI,SAALG,OAAAC,EAAA,EAAAD,CAAA,GACEJ,EAAYG,EAAMG,OAAOC,WAI5BT,YAAc,WACbD,EAAKI,SAAS,CAAC1B,KAAM,KACrBsB,EAAKb,MAAMc,iBAGZU,YAAc,SAACC,GACd,IAAIC,EAEJ,OADAC,QAAQC,IAAIH,GACLA,GACN,KAAK,EACJC,EAAK,eACL,MACD,KAAK,EACJA,EAAK,eACL,MACD,KAAK,EACJA,EAAK,eACL,MACD,KAAK,EACJA,EAAK,2BACL,MACD,KAAK,EACJA,EAAK,eACL,MACD,KAAK,EACJA,EAAK,eACL,MACD,KAAK,EACJA,EAAK,eAMsB,SAA1Bb,EAAKH,MAAMC,WACbE,EAAKI,SAAS,CACb1B,KAAMsB,EAAKH,MAAMnB,KAAOmC,IAGzBb,EAAKI,SAAS,CACbzB,OAAQqB,EAAKH,MAAMlB,OAASkC,6EAKtB,IAAAG,EAAA9B,KACF+B,EAAoB/B,KAAKC,MAAM+B,KAAO,sBAAwB,qBAEpE,OACC5B,EAAAC,EAAAC,cAAA,OAAKC,UAAWwB,GACf3B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aACjBH,EAAAC,EAAAC,cAAA,YACA2B,GAAG,YACHC,YAAY,YACZ3B,UAAU,WACViB,MAAOxB,KAAKW,MAAMnB,KAClB2C,QAAS,kBAAML,EAAKd,YAAY,SAChCoB,SAAU,SAAAC,GAAC,OAAIP,EAAKX,aAAakB,EAAG,WAEpCjC,EAAAC,EAAAC,cAAA,SACC2B,GAAG,cACHC,YAAY,gBACZI,KAAK,OACL/B,UAAU,cACViB,MAAOxB,KAAKW,MAAMlB,OAClB0C,QAAS,kBAAML,EAAKd,YAAY,WAChCoB,SAAU,SAAAC,GAAC,OAAIP,EAAKX,aAAakB,EAAG,aAErCjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACdH,EAAAC,EAAAC,cAAA,QAAMiC,KAAK,MAAMC,aAAW,QAAQC,QAAS,kBAAMX,EAAKL,YAAY,IAAIlB,UAAU,eAAlF,gBACAH,EAAAC,EAAAC,cAAA,QAAMiC,KAAK,MAAMC,aAAW,aAAaC,QAASzC,KAAKyB,YAAYiB,KAAK1C,KAAM,GAAIO,UAAU,eAA5F,gBACAH,EAAAC,EAAAC,cAAA,QAAMiC,KAAK,MAAMC,aAAW,aAAaC,QAASzC,KAAKyB,YAAYiB,KAAK1C,KAAM,GAAIO,UAAU,eAA5F,gBACAH,EAAAC,EAAAC,cAAA,QAAMiC,KAAK,MAAMC,aAAW,WAAWC,QAASzC,KAAKyB,YAAYiB,KAAK1C,KAAM,GAAIO,UAAU,eAA1F,4BACAH,EAAAC,EAAAC,cAAA,QAAMiC,KAAK,MAAMC,aAAW,aAAaC,QAASzC,KAAKyB,YAAYiB,KAAK1C,KAAM,GAAIO,UAAU,eAA5F,gBACAH,EAAAC,EAAAC,cAAA,QAAMiC,KAAK,MAAMC,aAAW,cAAcC,QAASzC,KAAKyB,YAAYiB,KAAK1C,KAAM,GAAIO,UAAU,eAA7F,gBACAH,EAAAC,EAAAC,cAAA,QAAMiC,KAAK,MAAMC,aAAW,SAASC,QAASzC,KAAKyB,YAAYiB,KAAK1C,KAAM,GAAIO,UAAU,eAAxF,iBAEDH,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,UAAQmC,QAASzC,KAAKe,YAAaR,UAAU,uBAA7C,UACAH,EAAAC,EAAAC,cAAA,UAAQmC,QAASzC,KAAKa,YAAaN,UAAU,yBAA7C,sBA7GcE,aCyELkC,6MAtEdhC,MAAQ,CACPiC,MAAO,GACPZ,MAAM,KA8BPa,UAAY,SAACnD,EAAGC,GACfmB,EAAKI,SAAS,CACbc,MAAM,EACNtC,EAAGA,EACHC,EAAGA,OAILmD,UAAY,WACXhC,EAAKI,SAAS,CAAEc,MAAM,OAGvBe,YAAc,SAACV,GACdvB,EAAK+B,UAAUR,EAAEW,MAAQC,OAAOC,WAAa,IAAKb,EAAEc,MAAQF,OAAOG,YAAc,yFAxC9D,IHTQC,EAAIC,EGSZxB,EAAA9B,KHTQqD,EGUP,SAACE,EAAK/D,GAAN,OAAesC,EAAKZ,SAAS,CAChD0B,MAAOd,EAAKnB,MAAMiC,MAAMY,OAAOhE,MHXD8D,EGY3B,SAACG,GAAD,OAAc3B,EAAKZ,SAAS,CAC/B0B,MAAOa,KHVRpE,EAAOqE,GAAG,UAAW,SAAClE,GAAD,OAAU6D,EAAG,KAAM7D,KACxCH,EAAOqE,GAAG,aAAc,SAACD,GAAD,OAAcH,EAAMG,KAS7CpE,EAAOO,KAAK,8CGUX,IADA,IAAI+D,EAAO,GACFjC,EAAE,EAAGA,EAAI1B,KAAKW,MAAMiC,MAAMgB,OAAQlC,IAC1CiC,EAAKE,KAAKzD,EAAAC,EAAAC,cAACd,EAAD,CACTsE,IAAK,OAASpC,EACdlC,KAAMQ,KAAKW,MAAMiC,MAAMlB,GAAGlC,KAC1BC,OAAQO,KAAKW,MAAMiC,MAAMlB,GAAGjC,OAC5BS,KAAMF,KAAKW,MAAMiC,MAAMlB,GAAGxB,KAC1BC,IAAKH,KAAKW,MAAMiC,MAAMlB,GAAGvB,IACzBJ,QAASC,KAAKW,MAAMiC,MAAMlB,GAAG3B,WAG/B,OAAO4D,mCAoBL,OACFvD,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACyD,EAAD,CACC/B,KAAMhC,KAAKW,MAAMqB,KACjBjB,YAAaf,KAAK8C,UAClBpD,EAAGM,KAAKW,MAAMjB,EACdC,EAAGK,KAAKW,MAAMhB,IAEfS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMkC,QAASzC,KAAK+C,aAClC3C,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,0BACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBP,KAAKgE,oBA7DOvD,aCMEwD,QACW,cAA7BhB,OAAOiB,SAASC,UAEe,UAA7BlB,OAAOiB,SAASC,UAEhBlB,OAAOiB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOlE,EAAAC,EAAAC,cAACiE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.2bfa1fcb.chunk.js","sourcesContent":["import io from 'socket.io-client';\nconst  socket = io('https://worldwhiteboard.herokuapp.com');//'http://192.168.0.106:8000')//\n\nfunction subscribeToNewNotes(cb, reset) {\n  //socket.on('timer', timestamp => cb(null, timestamp));\n  //socket.emit('subscribeToTimer', 10000);\n  socket.on('newNote', (note) => cb(null, note));\n  socket.on('resetNotes', (notesArr) => reset(notesArr));\n  //socket.emit('newNote', 'Fucking long note jks jfkafkafhjj sasads ssss  sss sss ss s hjhj', 'Author', '100', '20', '0.7');\n}\n\nfunction sendNote(note, author, x, y){\n\tsocket.emit('newNote', note, author, x, y, '1');\n}\n\nfunction getNotes(){\n\tsocket.emit('getNotes');\n}\n\nexport { subscribeToNewNotes, sendNote, getNotes };","import React, { Component } from 'react';\nimport './App.css';\n\nclass Note extends Component {\n\trender() {\n\t\tconst opacityStyle = {\n\t\t\topacity: this.props.opacity,\n\t\t\tleft: this.props.left + '%',\n\t\t\ttop: this.props.top + '%'\n\t\t};\n\n\t\treturn (\n\t\t<div className=\"noteBubble\" style={opacityStyle}>\n\t\t\t<div className=\"noteNote\">{this.props.note}</div>\n\t\t\t<div className=\"noteAuthor\">-{this.props.author}</div>\n\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Note;","import React, { Component } from 'react';\nimport { sendNote } from './api.js';\nimport './App.css';\n\nclass Modal extends Component {\n\tstate = {\n\t\tnote: '',\n\t\tauthor: '',\n\t\tmodalFocus: ''\n\t};\n\n\thandleWrite = () => {\n\t\tif(this.state.note){\n\t\t\tif(this.state.author)\n\t\t\t\tsendNote(this.state.note, this.state.author, this.props.x, this.props.y);\n\t\t\telse\n\t\t\t\tsendNote(this.state.note, 'Unknown', this.props.x, this.props.y);\n\t\t\t\n\t\t\tthis.handleClose()\n\t\t}\n\t}\n\n\thandleFocus = (valueName) => {\n\t\tthis.setState({\n\t\t\tmodalFocus: valueName\n\t\t});\n\t}\n\n\thandleChange = (event, valueName) => {\n\t\tthis.setState({\n\t\t\t[valueName]: event.target.value\n\t\t});\n\t}\n\n\thandleClose = () => {\n\t\tthis.setState({note: ''});\n\t\tthis.props.handleClose();\n\t}\n\n\thandleEmoji = (i) => {\n\t\tlet em;\n\t\tconsole.log(i);\n\t\tswitch(i){\n\t\t\tcase 0:\n\t\t\t\tem = '😂';\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tem = '😎';\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tem = '😍';\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tem = '👍🏻';\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tem = '❤️';\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tem = '🍏';\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tem = '🚀';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif(this.state.modalFocus === 'note')\n\t\t\tthis.setState({\n\t\t\t\tnote: this.state.note + em\n\t\t\t});\n\t\telse\n\t\t\tthis.setState({\n\t\t\t\tauthor: this.state.author + em\n\t\t\t});\n\t}\n\n\n\trender() {\n\t\tconst showHideClassName = this.props.show ? \"modal display-block\" : \"modal display-none\";\n\n\t\treturn (\n\t\t\t<div className={showHideClassName}>\n\t\t\t\t<header className=\"modalMain\">\n\t\t\t\t\t<textarea \n\t\t\t\t\tid=\"NoteInput\" \n\t\t\t\t\tplaceholder=\"Your Note\" \n\t\t\t\t\tclassName=\"noteArea\" \n\t\t\t\t\tvalue={this.state.note} \n\t\t\t\t\tonFocus={() => this.handleFocus('note')} \n\t\t\t\t\tonChange={e => this.handleChange(e, 'note')}/>\n\t\t\t\t\t\n\t\t\t\t\t<input \n\t\t\t\t\t\tid=\"AuthorInput\" \n\t\t\t\t\t\tplaceholder=\"Your Nickname\" \n\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\tclassName=\"authorInput\" \n\t\t\t\t\t\tvalue={this.state.author} \n\t\t\t\t\t\tonFocus={() => this.handleFocus('author')} \n\t\t\t\t\t\tonChange={e => this.handleChange(e, 'author')}/>\n\n\t\t\t\t\t<div className=\"emojiDiv\">\n\t\t\t\t\t\t<span role=\"img\" aria-label=\"Laugh\" onClick={() => this.handleEmoji(0)} className=\"modalButton\">😂</span>\n\t\t\t\t\t\t<span role=\"img\" aria-label=\"SunGlasses\" onClick={this.handleEmoji.bind(this, 1)} className=\"modalButton\">😎</span>\n\t\t\t\t\t\t<span role=\"img\" aria-label=\"Heart Eyes\" onClick={this.handleEmoji.bind(this, 2)} className=\"modalButton\">😍</span>\n\t\t\t\t\t\t<span role=\"img\" aria-label=\"Thumb Up\" onClick={this.handleEmoji.bind(this, 3)} className=\"modalButton\">👍🏻</span>\n\t\t\t\t\t\t<span role=\"img\" aria-label=\"Read Heart\" onClick={this.handleEmoji.bind(this, 4)} className=\"modalButton\">❤️</span>\n\t\t\t\t\t\t<span role=\"img\" aria-label=\"Green Apple\" onClick={this.handleEmoji.bind(this, 5)} className=\"modalButton\">🍏</span>\n\t\t\t\t\t\t<span role=\"img\" aria-label=\"Rocket\" onClick={this.handleEmoji.bind(this, 6)} className=\"modalButton\">🚀</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button onClick={this.handleClose} className=\"modalButton btn red\">Cancel</button>\n\t\t\t\t\t\t<button onClick={this.handleWrite} className=\"modalButton btn green\">Write It</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Modal;","import React, { Component } from 'react';\nimport './App.css';\nimport { subscribeToNewNotes, getNotes } from './api.js';\nimport Note from './note.js'\nimport Modal from './modal.js'\n\nclass App extends Component {\n\tstate = {\n\t\tnotes: [],\n\t\tshow: false\n\t};\n\n\tcomponentDidMount() {\n\t\tsubscribeToNewNotes((err, note) => this.setState({ \n\t\t\tnotes: this.state.notes.concat(note)\n\t\t}), (notesArr) => this.setState({\n\t\t\tnotes: notesArr\n\t\t}));\n\n\t\tgetNotes((notesArr) => this.setState({\n\t\t\tnotes: notesArr\n\t\t}));\n\t}\n\n\tgetList() {\n\t\tlet list = [];\n\t\tfor (let i=0; i < this.state.notes.length; i++) {\n\t\t\tlist.push(<Note \n\t\t\t\tkey={'Note' + i}\n\t\t\t\tnote={this.state.notes[i].note} \n\t\t\t\tauthor={this.state.notes[i].author} \n\t\t\t\tleft={this.state.notes[i].left}\n\t\t\t\ttop={this.state.notes[i].top}\n\t\t\t\topacity={this.state.notes[i].opacity}/>)\n\t\t\t\t//console.log(this.state.lefts[i] + \" : \" + this.state.tops[i] + \" : \" + this.state.opacity[i]);\n\t\t} \n\t\treturn list;\n\t}\n\n\tshowModal = (x, y) => {\n\t\tthis.setState({ \n\t\t\tshow: true, \n\t\t\tx: x,\n\t\t\ty: y\n\t\t});\n\t};\n\t\n\thideModal = () => {\n\t\tthis.setState({ show: false });\n\t};\n\n\thandleClick = (e) => {\n\t\tthis.showModal(e.pageX / window.innerWidth * 100, e.pageY / window.innerHeight * 100)\n\t}\n\n  render() {\n    return (\n\t\t<div>\n\t\t\t<Modal \n\t\t\t\tshow={this.state.show} \n\t\t\t\thandleClose={this.hideModal}\n\t\t\t\tx={this.state.x}\n\t\t\t\ty={this.state.y} />\n\n\t\t\t<div className=\"App\" onClick={this.handleClick}>\n\t\t\t\t<p className=\"PageTitle\">The World's WhiteBoard</p>\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t{this.getList()}\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t</div>\n\n\t\t\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}